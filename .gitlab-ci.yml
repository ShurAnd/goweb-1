---
variables:
  IMAGE_TAG: "latest"
#  IMAGE_TAG: $CI_COMMIT_SHORT_SHA

include:
  - template: Code-Quality.gitlab-ci.yml

stages:
  - build
  - test
  - deploy

image: docker:latest

before_script:
  - echo "$DOCKER_PASS" | docker login -u $DOCKER_USER --password-stdin

build-task:
  stage: build
  variables:
     DOCKER_HOST: unix:///var/run/docker.sock
  script:
    - docker build -t $DOCKER_USER/$IMAGE_NAME:$IMAGE_TAG .
    - docker push $DOCKER_USER/$IMAGE_NAME:$IMAGE_TAG
  only:
    - master
    - dev

code_quality:
    stage: test
    image: golang:1.24-alpine
    before_script:
      - apk add --no-cache jq
      - go install github.com/fzipp/gocyclo/cmd/gocyclo@latest
      - go install golang.org/x/lint/golint@latest
      - go install github.com/go-critic/go-critic/cmd/gocritic@latest
      - go install honnef.co/go/tools/cmd/staticcheck@latest
      - go install github.com/jstemmer/go-junit-report@latest
    script:
      - echo '[]' > gl-code-quality-report.json
      - go vet ./... || true
      - staticcheck ./... || true
      - gocritic check ./... || true
      -  | 
       if [ $(find . -name "*_test.go" | wc -l) -eq 0 ]; then 
       jq '. += [{"description": "No tests found", "severity": "major", "fingerprint": "no-tests", "location": { "path": ".", "lines": { "begin": 1 } } } ]' gl-code-quality-report.json > tmp.json && mv tmp.json gl-code-quality-report.json 
       fi
        
      - go test -v ./... 2>&1 | go-junit-report > unit_test_results.xml || true
    artifacts:
      reports:
        codequality: gl-code-quality-report.json
        junit: unit_test_results.xml
      paths:
        - gl-code-quality-report.json
      when: always

test-task:
  stage: test
  script:
    - echo "test"
  needs: ["build-task"]
  only:
    - master
    - dev

deploy-task:
  stage: deploy
  script:
    - docker rm --force $IMAGE_NAME
    - docker pull $DOCKER_USER/$IMAGE_NAME:$IMAGE_TAG
    - docker run -d -p 9999:9999 --name $IMAGE_NAME $DOCKER_USER/$IMAGE_NAME
  needs: ["test-task"]
  only:
    - master
    - dev
...
